
a.c,639
#define _GNU_SOURCE3,66
typedef struct node 26,498
  int *md;md27,520
  char *word;word28,531
  int count;29,545
  struct node *lesser;lesser30,558
  struct node *greater;greater31,581
} NODE;32,605
NODE sample_node;34,614
int NODE_md[NODE_md36,633
NODE *root;root41,736
int node_count 43,749
NODE *new_node(new_node44,769
int smallword_count 55,1111
int bigword_count 56,1136
char *new_word(new_word57,1159
char *read_word(read_word69,1428
void insert_node(90,1772
NODE *build_word_tree(build_word_tree137,3041
int walk_word_tree(153,3466
void *start_word_count(start_word_count168,3800
int main(180,4036

allocate.h,138
#define SXpointers 6,131
#define SXnopointers 7,165
#define SXbeerBash(9,200
#define setf_init(10,245
#define INVALID_ADDRESS 12,290

compat.h,105
typedef int *SXobject;SXobject3,66
typedef struct metadata 5,90
  int nBytes;6,116
} MetaData;7,130

infoBits.h,1175
typedef struct gc_header 9,249
  struct gc_header * prev;10,276
  struct gc_header * next;11,303
} GC_HEADER;12,330
typedef GC_HEADER * GCPTR;14,344
typedef struct gcmd_header 16,372
  struct gc_header * prev;17,401
  struct gc_header * next;18,428
  void *metadata;metadata19,455
} GCMD_HEADER;20,473
typedef GCMD_HEADER * GCMDPTR;22,489
#define LINK_INFO_BITS 24,521
#define LINK_INFO_MASK 25,546
#define LINK_POINTER_MASK 26,597
#define GET_LINK_POINTER(28,642
#define SET_LINK_POINTER(29,715
#define GET_LINK_INFO(33,872
#define SET_LINK_INFO(34,922
#define GC_STORAGE_INFO_MASK 43,1223
#define GC_COLOR_INFO_MASK 44,1258
#define GET_STORAGE_CLASS(46,1292
#define SET_STORAGE_CLASS(47,1368
#define GET_INSTANCE_STORAGE_CLASS(49,1461
#define SET_INSTANCE_STORAGE_CLASS(50,1583
#define GET_COLOR(52,1723
#define SET_COLOR(53,1788
#define SC_NOPOINTERS 55,1866
#define SC_POINTERS 56,1894
#define SC_METADATA 57,1922
#define SC_INSTANCE 58,1950
#define GENERATION0 60,1980
#define GENERATION1 61,2008
#define GRAY 62,2036
#define GREEN 63,2064
#define WHITEP(65,2143
#define BLACKP(66,2194
#define GRAYP(67,2243
#define GREENP(68,2284

mem-config.h,763
#define MAX_HEAP_SEGMENTS 6,138
#define MAX_STATIC_SEGMENTS 7,166
#define MAX_SEGMENTS 8,196
#define MAX_THREADS 9,257
#define MAX_GLOBAL_ROOTS 10,281
#define DEFAULT_HEAP_SEGMENT_SIZE 13,361
#define DEFAULT_STATIC_SEGMENT_SIZE 14,403
#define CHECK_BASH 15,481
#define CHECK_SETFINIT 16,502
#define GC_POINTER_ALIGNMENT 17,527
#define PAGE_POWER 18,573
#define INTERIOR_PTR_RETENTION_LIMIT 19,642
#define FLIP_SIGNAL 21,684
#define ELAPSED_MILLISECONDS(24,771
#define START_CODE_TIMING 27,920
#define END_CODE_TIMING(29,1024
#define ENABLE_VISUAL_MEMORY 32,1126
#define VISUAL_MEMORY_ON 33,1157
#define VISUAL_MEMORY_DEFAULT_ON 34,1225
#define UPDATE_VISUAL_STATE(35,1260
#define ENABLE_GC_TIMING 37,1377
#define DETECT_INVALID_REFS 38,1404

mem-internals.h,2980
#define EMPTY_PAGE 4,133
#define SYSTEM_PAGE 5,167
#define STATIC_PAGE 6,201
#define EXTERNAL_PAGE 7,235
#define HEAP_SEGMENT 9,270
#define STATIC_SEGMENT 10,293
#define BYTES_PER_PAGE 12,319
#define PAGE_ALIGNMENT_MASK 13,360
#define PTR_TO_PAGE_INDEX(14,409
#define PAGE_INDEX_TO_PTR(15,500
#define PTR_TO_GROUP(16,591
#define IN_PARTITION(17,653
#define PAGE_GROUP(18,754
#define IN_HEAP(19,834
#define IN_STATIC(20,903
#define IN_HEAP_OR_STATIC(21,995
#define IN_GLOBALS(22,1059
#define ROUND_DOWN_TO_PAGE(23,1156
#define ROUND_UP_TO_PAGE(24,1235
typedef unsigned long * LPTR;26,1309
typedef unsigned char * BPTR;27,1339
#define MIN_GROUP_INDEX 35,1598
#define MAX_GROUP_INDEX 36,1657
#define MIN_GROUP_SIZE 37,1720
#define MAX_GROUP_SIZE 38,1766
#define NUMBER_OF_GROUPS 39,1813
#define MIN_OBJECT_ALIGNMENT 40,1878
#define INSTANCE_TO_GCPTR(41,1928
#define HEAP_OBJECT_TO_GCPTR(42,2002
#define DOUBLE_ALIGNMENT 43,2083
#define DOUBLE_ALIGNED_P(44,2129
#define LONG_ALIGNMENT 45,2205
#define ROUND_UPTO_LONG_ALIGNMENT(46,2247
#define  CLASSP(52,2544
#define METADATAP(53,2642
#define MAYBE_PAUSE_GC55,2683
#define MIN(57,2707
#define MAX(58,2742
#define SWAP(59,2777
typedef struct group_info 61,2832
  int size;62,2860
  int index;63,2872
  GCPTR free_last;65,2886
  GCPTR free;66,2937
  GCPTR gray;67,2984
  GCPTR black;68,3024
  GCPTR white;69,3065
  int total_object_count;72,3108
  int white_count;73,3165
  int black_count;74,3209
  int green_count;75,3260
  pthread_mutex_t free_lock;77,3312
  pthread_mutex_t black_count_lock;78,3372
} GROUP_INFO;80,3440
typedef GROUP_INFO * GPTR;82,3455
typedef struct segment 84,3483
  BPTR first_segment_ptr;85,3508
  BPTR last_segment_ptr;86,3534
  int segment_page_count;87,3559
  int type;88,3585
} SEGMENT;89,3597
typedef struct hole 91,3609
  int page_count;92,3631
  struct hole *next;next93,3677
} HOLE;94,3726
typedef HOLE * HOLE_PTR;96,3735
typedef struct page_info 98,3761
  GCPTR base;99,3788
  GPTR group;100,3802
  int bytes_used;101,3816
} PAGE_INFO;102,3834
typedef PAGE_INFO * PPTR;104,3848
typedef struct thread_info 106,3875
  pthread_t pthread;107,3904
  gregset_t registers;108,3925
  long long *stack_base;stack_base109,3976
  int stack_size;110,4056
  char *stack_bottom;stack_bottom111,4074
  char *saved_stack_base;saved_stack_base112,4144
  int saved_stack_size;113,4215
} THREAD_INFO;114,4239
typedef THREAD_INFO * TPTR;116,4255
typedef struct start_thread_args 118,4284
  int thread_index;119,4319
  void *(*real_start_func)real_start_func120,4339
  char *real_args;real_args121,4376
} START_THREAD_ARGS;122,4395
typedef struct counter 124,4417
  int count;125,4442
  pthread_mutex_t lock;126,4455
  pthread_cond_t cond;127,4479
} COUNTER;128,4502
#define ENABLE_LOCKING 203,6655
#define LOCK(206,6700
#define UNLOCK(207,6746
#define LOCK(209,6801
#define UNLOCK(210,6822
#define WITH_LOCK(213,6851

rtalloc.c,873
#define _GNU_SOURCE4,100
HOLE_PTR empty_pages;22,439
int total_allocation;24,462
int total_requested_allocation;25,484
int total_requested_objects;26,516
int total_allocation_this_cycle;27,545
int size_to_group_index(30,586
void init_group_info(43,781
void init_page_info(67,1589
void SXinit_empty_pages(76,1832
int allocate_segment(100,2641
GCPTR allocate_empty_pages(146,4360
void init_pages_for_group(212,6387
GPTR allocationGroup(275,8523
LPTR SXInitializeObject(312,9635
void * SXallocate(352,10691
GCPTR interior_to_gcptr(410,12471
void verify_group(429,12955
void verify_all_groups(452,13712
int SXtotalFreeHeapSpace(471,14354
int SXlargestFreeHeapBlock(489,14836
void init_gc_thread(519,15654
void register_global_root(537,16192
void SXinit_heap(546,16439
void *rtalloc_start_thread(rtalloc_start_thread589,17889
int new_thread(632,19439

rtalloc-extra.c,191
void * SXstaticAllocate(6,128
static void * copy_object(46,1536
void * SXreallocate(83,2612
int SXstackAllocationSize(128,3995
int SXallocationTrueSize(135,4207
int SXtrueSize(144,4502

rtgc.c,1155
int gc_count;27,694
double total_gc_time_in_cycle;28,708
double max_increment_in_cycle;29,739
double total_write_barrier_time_in_cycle;30,770
struct timeval start_gc_cycle_time;31,812
double last_cycle_ms;32,848
double last_gc_ms;33,870
double last_write_barrier_ms;34,889
void SXmake_object_gray(41,1130
void scan_memory_segment(91,2730
void scan_memory_segment_with_metadata(117,3527
void * SXwrite_barrier(123,3751
void * SXsafe_bash(144,4424
void *  SXsafe_setfInit(167,4994
void *ptrcpy(ptrcpy178,5296
void *ptrset(ptrset190,5651
void scan_thread_registers(201,5892
void scan_thread_saved_stack(208,6127
void scan_thread(216,6414
void scan_threads(222,6523
void scan_global_roots(230,6720
void scan_static_space(252,7315
void scan_root_set(274,7906
void scan_object(286,8173
void scan_object_with_group(309,8708
void scan_gray_set(319,9015
void flip(355,9858
GCPTR recycle_group_garbage(420,12124
void recycle_all_garbage(482,14121
void reset_gc_cycle_stats(492,14358
void summarize_gc_cycle_stats(503,14614
void full_gc(516,14975
void rtgc_loop(533,15304
int rtgc_count(545,15555
void init_realtime_gc(549,15601

rtgc-extra.c,162
void remove_object_from_free_list(7,166
void convert_free_to_empty_pages(37,987
void coalesce_segment_free_pages(65,2050
void coalesce_all_free_pages(94,3097

rtglobals.c,930
#define _USE_GNU5,125
#define _GNU_SOURCE6,142
GROUP_INFO *groups;groups23,442
PAGE_INFO *pages;pages24,462
SEGMENT *segments;segments26,481
int total_segments;27,500
THREAD_INFO *threads;threads29,521
int total_threads;30,543
char **global_roots;global_roots32,563
int total_global_roots;33,584
BPTR first_static_ptr;36,666
BPTR last_static_ptr;37,689
BPTR first_partition_ptr;39,712
BPTR last_partition_ptr;40,738
int total_partition_pages;42,764
int unmarked_color;43,791
int marked_color;44,811
int enable_write_barrier;45,829
int memory_mutex;46,855
int visual_memory_on;48,874
char *last_gc_state;last_gc_state49,896
pthread_key_t thread_index_key;51,918
pthread_mutex_t total_threads_lock;53,951
pthread_mutex_t empty_pages_lock;54,987
pthread_mutex_t make_object_gray_lock;58,1218
COUNTER stacks_copied_counter;60,1258
sem_t gc_semaphore;61,1289
int run_gc 62,1309
int atomic_gc 63,1325

rtstop.c,212
#define _GNU_SOURCE3,66
static int mutators_may_proceed 20,387
void print_registers(23,477
void gc_flip_action_func(65,1829
void init_signals_for_rtgc(105,3427
int stop_all_mutators_and_save_state(123,3935

vizmem.c,593
void *SXbig_malloc(SXbig_malloc21,413
void out_of_memory(32,659
static int zero 37,781
static int debug;38,802
void Debugger(40,821
void copy_test(51,997
void counter_init(66,1449
void counter_zero(72,1579
void counter_increment(79,1739
void counter_wait_threshold(89,1997
void SXmaybe_update_visual_page(98,2244
int SXupdate_visual_page(102,2342
void SXupdate_visual_static_page(105,2388
void SXupdate_visual_fake_ptr_page(107,2442
void SXdraw_visual_gc_state(109,2497
void SXdraw_visual_gc_stats(111,2535
void SXvisual_runbar_on(113,2573
void SXvisual_runbar_off(115,2607

vizmem.h,0
