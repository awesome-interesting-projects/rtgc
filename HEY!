m-x gud-gdb to switch *dedicated* window

c-x c-a c-b to set breakpoint at point line. Who changed this and why?

service sshd start
// to enable sshd at boot time
systemctl enable sshd.service


git clone https://github.com/wadehennessey/rtgc

git commit -m "blah"

git push

move thread stopping stuff from a.c into rtgc.c

use #define _GNU_SOURCE for weird compile problems not seeing decls


gdb> info signals



use next instead of continue to switch to diff thread break points

Semaphores
------------
in alloc when out of memory:
sem_post(&gc_semaphore);
sem_wait(&gc_semaphore);	

in rtgc_loop:
sem_wait(&gc_semaphore);
full_gc();
sem_post(&gc_semaphore);
------------

handle SIGUSR1 nostop
set non-stop on

>set non-stop on
>set non-stop off
>show non-stop

>interrupt     will stop the running thread

cond break: >break a.c:166 if (j == 1535)

thread[0] overwrite. to reproduce:

PROBLEM:
--------
break on j loop
thread 2
disp/x threads[0]
disp j
next 512
when j == 256, step into allocate, watch overwrite before SXInitializeObject

this overwrites begin of threads
    page->bytes_used = page->bytes_used + group->size;

total_partition_pages isn't known when we do this:
  pages = malloc(sizeof(PAGE_INFO) * total_partition_pages)

FIX:total_partition_pages = first_segment_bytes / 4096

REMOVE in allocate_segment:
	total_partition_pages = ((last_partition_ptr - first_partition_ptr) /
				 BYTES_PER_PAGE);