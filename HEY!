very useful to keep debuinfo up to date
dnf --enablerepo=updates-debuginfo update

m-x gud-gdb to switch *dedicated* window
c-x c-a c-b to set breakpoint at point line. Who changed this and why?

service sshd start
// to enable sshd at boot time
systemctl enable sshd.service


git clone https://github.com/wadehennessey/rtgc.git
or
git checkout <commit hash> 


git commit -am "blah"
# then must push commit
git push



use #define _GNU_SOURCE for weird compile problems not seeing decls


gdb> info signals
use next instead of continue to switch to diff thread break points

Semaphores
------------
in alloc when out of memory:
sem_post(&gc_semaphore);
sem_wait(&gc_semaphore);	

in rtgc_loop:
sem_wait(&gc_semaphore);
full_gc();
sem_post(&gc_semaphore);
------------

# these go in .gdbinit
handle SIGUSR1 nostop
set non-stop on

>set non-stop on
>set non-stop off
>show non-stop
>interrupt     will stop the running thread
>break a.c:166 if (j == 1535)


wmctrl -r "emacs" -e 1,-1,-1,770,1010



TODO:
-----
verify:
double linked lists correct - (obj->next)->prev == obj, (obj->prev)->next == obj
verify color in header and color in list are the same
verify all _count fields are correct.

# to limit all threads in ./a to the second core:
taskset 0x10 ./a

# rr traces are stored in /home/wade/.local/share/rr/

gdb tui mode in xterm: c-x a

too see event numbers and start at a specific event number:
rr -M replay -g <event-number>


try gdb cmds:
-------------
checkpoint
info checkpoints - not implemented
restart <cp-id>
delete <cp-id>

gdb "when" command shows current event-number

try rr -c and -e options to increase thread interleave

# task switch after every N retired branches
rr record -c 2500 ./a

# I think I recorded "the bug" with this (compile "make debug")
rr record -c 5 ./a

# to see record options
rr record -h
rr replay -h

From rr/src/Scheduler.h
-c default:  enum { DEFAULT_MAX_TICKS = 250000 };    // 50ms time slice
-e default:  enum { DEFAULT_MAX_EVENTS = 10 };

To run real-time round-robin:
-----------------
chrt --rr 30 ./a
or
chrt --fifo 30 ./a

ps -Lo pid,tid,class <./a pid #>


To add swap
------------
su
cd /home
dd if=/dev/zero of=bigswapfile bs=1G count=64
chmod 600 /root/bigswapfile
mkswap bigswapfile
swapon bigswapfile

in /etc/fstab add:
/home/bigswapfile		swap		swap	defaults	0 0


flip
-------
200ns for the "null" signal and return time. Includes double the "system" time.
Mean 5000 "null" signal and returns per 1ms.

Time for 1,000,000 "null" kill signal and returns 
real	0m0.209s
user	0m0.029s
sys	0m0.389s

---------------------------------------------
break Debugger
break __assert

try gcc -mcmodel=large to avoid dlopen relocation problems in wcl


split group->black_count into 2: 
black_count == black_scanned_count + black_new_count
remove black_count_lock with count_lock for conditional debugging 

change group->free_last to just group->last?
remove green count and total_object_count
--------------
Also, we should merge adjacent holes into one bigger hole as the last
step in the coalescer.

fix:remove redundant > EXTERNAL test in interior_to_gcptr(and 3)
fix: don't dup lock/unlock_all_locks. Make it non static in rtutil.
fix: add .gdbinit to rtgc, make ~/.gdbinit a link to rtgc version
fix: add .wclinit to wcl, make ~/.wclinit a link



